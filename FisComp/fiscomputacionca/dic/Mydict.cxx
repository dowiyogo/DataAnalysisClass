//
// File generated by rootcint at Tue Jul 26 20:17:56 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Mydict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Mydict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Alumno_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Alumno(void *p = 0);
   static void *newArray_Alumno(Long_t size, void *p);
   static void delete_Alumno(void *p);
   static void deleteArray_Alumno(void *p);
   static void destruct_Alumno(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Alumno*)
   {
      ::Alumno *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Alumno >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Alumno", ::Alumno::Class_Version(), "./Curso.h", 9,
                  typeid(::Alumno), DefineBehavior(ptr, ptr),
                  &::Alumno::Dictionary, isa_proxy, 4,
                  sizeof(::Alumno) );
      instance.SetNew(&new_Alumno);
      instance.SetNewArray(&newArray_Alumno);
      instance.SetDelete(&delete_Alumno);
      instance.SetDeleteArray(&deleteArray_Alumno);
      instance.SetDestructor(&destruct_Alumno);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Alumno*)
   {
      return GenerateInitInstanceLocal((::Alumno*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Alumno*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Horario_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Horario(void *p = 0);
   static void *newArray_Horario(Long_t size, void *p);
   static void delete_Horario(void *p);
   static void deleteArray_Horario(void *p);
   static void destruct_Horario(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Horario*)
   {
      ::Horario *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Horario >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Horario", ::Horario::Class_Version(), "./Curso.h", 22,
                  typeid(::Horario), DefineBehavior(ptr, ptr),
                  &::Horario::Dictionary, isa_proxy, 4,
                  sizeof(::Horario) );
      instance.SetNew(&new_Horario);
      instance.SetNewArray(&newArray_Horario);
      instance.SetDelete(&delete_Horario);
      instance.SetDeleteArray(&deleteArray_Horario);
      instance.SetDestructor(&destruct_Horario);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Horario*)
   {
      return GenerateInitInstanceLocal((::Horario*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Horario*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Curso_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Curso(void *p = 0);
   static void *newArray_Curso(Long_t size, void *p);
   static void delete_Curso(void *p);
   static void deleteArray_Curso(void *p);
   static void destruct_Curso(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Curso*)
   {
      ::Curso *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Curso >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Curso", ::Curso::Class_Version(), "./Curso.h", 34,
                  typeid(::Curso), DefineBehavior(ptr, ptr),
                  &::Curso::Dictionary, isa_proxy, 4,
                  sizeof(::Curso) );
      instance.SetNew(&new_Curso);
      instance.SetNewArray(&newArray_Curso);
      instance.SetDelete(&delete_Curso);
      instance.SetDeleteArray(&deleteArray_Curso);
      instance.SetDestructor(&destruct_Curso);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Curso*)
   {
      return GenerateInitInstanceLocal((::Curso*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Curso*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Alumno::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Alumno::Class_Name()
{
   return "Alumno";
}

//______________________________________________________________________________
const char *Alumno::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Alumno::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Alumno::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Alumno::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Horario::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Horario::Class_Name()
{
   return "Horario";
}

//______________________________________________________________________________
const char *Horario::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Horario*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Horario::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Horario*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Horario::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Horario*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Horario::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Horario*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Curso::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Curso::Class_Name()
{
   return "Curso";
}

//______________________________________________________________________________
const char *Curso::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Curso*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Curso::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Curso*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Curso::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Curso*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Curso::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Curso*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Curso::Streamer(TBuffer &R__b)
{
   // Stream an object of class Curso.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Curso::Class(),this);
   } else {
      R__b.WriteClassBuffer(Curso::Class(),this);
   }
}

//______________________________________________________________________________
void Curso::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Curso.
      TClass *R__cl = ::Curso::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNAlumnos", &fNAlumnos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCursos", &fNCursos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ffecha", &ffecha);
      R__insp.InspectMember(ffecha, "ffecha.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAlumnos", &fAlumnos);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Curso(void *p) {
      return  p ? new(p) ::Curso : new ::Curso;
   }
   static void *newArray_Curso(Long_t nElements, void *p) {
      return p ? new(p) ::Curso[nElements] : new ::Curso[nElements];
   }
   // Wrapper around operator delete
   static void delete_Curso(void *p) {
      delete ((::Curso*)p);
   }
   static void deleteArray_Curso(void *p) {
      delete [] ((::Curso*)p);
   }
   static void destruct_Curso(void *p) {
      typedef ::Curso current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Curso

//______________________________________________________________________________
void Horario::Streamer(TBuffer &R__b)
{
   // Stream an object of class Horario.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Horario::Class(),this);
   } else {
      R__b.WriteClassBuffer(Horario::Class(),this);
   }
}

//______________________________________________________________________________
void Horario::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Horario.
      TClass *R__cl = ::Horario::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBloque", &fBloque);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Horario(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Horario : new ::Horario;
   }
   static void *newArray_Horario(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Horario[nElements] : new ::Horario[nElements];
   }
   // Wrapper around operator delete
   static void delete_Horario(void *p) {
      delete ((::Horario*)p);
   }
   static void deleteArray_Horario(void *p) {
      delete [] ((::Horario*)p);
   }
   static void destruct_Horario(void *p) {
      typedef ::Horario current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Horario

//______________________________________________________________________________
void Alumno::Streamer(TBuffer &R__b)
{
   // Stream an object of class Alumno.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Alumno::Class(),this);
   } else {
      R__b.WriteClassBuffer(Alumno::Class(),this);
   }
}

//______________________________________________________________________________
void Alumno::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Alumno.
      TClass *R__cl = ::Alumno::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Rol", &Rol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nota", &Nota);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Alumno(void *p) {
      return  p ? new(p) ::Alumno : new ::Alumno;
   }
   static void *newArray_Alumno(Long_t nElements, void *p) {
      return p ? new(p) ::Alumno[nElements] : new ::Alumno[nElements];
   }
   // Wrapper around operator delete
   static void delete_Alumno(void *p) {
      delete ((::Alumno*)p);
   }
   static void deleteArray_Alumno(void *p) {
      delete [] ((::Alumno*)p);
   }
   static void destruct_Alumno(void *p) {
      typedef ::Alumno current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Alumno

/********************************************************
* Mydict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMydict();

extern "C" void G__set_cpp_environmentMydict() {
  G__cpp_reset_tagtableMydict();
}
#include <new>
extern "C" int G__cpp_dllrevMydict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Alumno */
static int G__Mydict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alumno[n];
     } else {
       p = new((void*) gvp) Alumno[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alumno;
     } else {
       p = new((void*) gvp) Alumno;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Alumno((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Alumno((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Alumno::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Alumno::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Alumno::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Alumno*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Alumno::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Alumno::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Alumno* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Alumno(*(Alumno*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Alumno G__TAlumno;
static int G__Mydict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Alumno*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Alumno*) (soff+(sizeof(Alumno)*i)))->~G__TAlumno();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Alumno*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Alumno*) (soff))->~G__TAlumno();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* dest = (Alumno*) G__getstructoffset();
   *dest = *(Alumno*) libp->para[0].ref;
   const Alumno& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Horario */
static int G__Mydict_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Horario* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Horario[n];
     } else {
       p = new((void*) gvp) Horario[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Horario;
     } else {
       p = new((void*) gvp) Horario;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Horario));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Horario*) G__getstructoffset())->FijarBloque((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Horario::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Horario::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Horario::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Horario::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Horario*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Horario*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Horario*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Horario*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Horario::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Horario::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Horario::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Horario::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Horario* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Horario(*(Horario*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Horario));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Horario G__THorario;
static int G__Mydict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Horario*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Horario*) (soff+(sizeof(Horario)*i)))->~G__THorario();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Horario*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Horario*) (soff))->~G__THorario();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Horario* dest = (Horario*) G__getstructoffset();
   *dest = *(Horario*) libp->para[0].ref;
   const Horario& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Curso */
static int G__Mydict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Curso* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Curso[n];
     } else {
       p = new((void*) gvp) Curso[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Curso;
     } else {
       p = new((void*) gvp) Curso;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Curso));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Curso*) G__getstructoffset())->FormarCurso((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Curso*) G__getstructoffset())->AddAlumno((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Curso::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Curso::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Curso::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Curso::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Curso*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Curso::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Curso::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Curso::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Curso::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Curso* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Curso(*(Curso*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Curso));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Curso G__TCurso;
static int G__Mydict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Curso*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Curso*) (soff+(sizeof(Curso)*i)))->~G__TCurso();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Curso*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Curso*) (soff))->~G__TCurso();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Curso* dest = (Curso*) G__getstructoffset();
   *dest = *(Curso*) libp->para[0].ref;
   const Curso& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Alumno */

/* Horario */

/* Curso */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMydict {
 public:
  G__Sizep2memfuncMydict(): p(&G__Sizep2memfuncMydict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMydict::*p)();
};

size_t G__get_sizep2memfuncMydict()
{
  G__Sizep2memfuncMydict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMydict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MydictLN_Alumno))) {
     Alumno *G__Lderived;
     G__Lderived=(Alumno*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MydictLN_Alumno),G__get_linked_tagnum(&G__MydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MydictLN_Curso))) {
     Curso *G__Lderived;
     G__Lderived=(Curso*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MydictLN_Curso),G__get_linked_tagnum(&G__MydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMydict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Alumno */
static void G__setup_memvarAlumno(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Alumno));
   { Alumno *p; p=(Alumno*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Rol)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Rol=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Nota)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"Nota=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Horario */
static void G__setup_memvarHorario(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Horario));
   { Horario *p; p=(Horario*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fBloque)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fBloque=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Curso */
static void G__setup_memvarCurso(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Curso));
   { Curso *p; p=(Curso*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fNAlumnos)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNAlumnos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fNCursos)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNCursos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ffecha)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__MydictLN_Horario),-1,-1,1,"ffecha=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fAlumnos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MydictLN_TClonesArray),-1,-1,1,"fAlumnos=",0,(char*)NULL);
   G__memvar_setup((void*)(&Curso::fgAlumnos),85,0,0,G__get_linked_tagnum(&G__MydictLN_TClonesArray),-1,-2,1,"fgAlumnos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMydict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAlumno(void) {
   /* Alumno */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Alumno));
   G__memfunc_setup("Alumno",620,G__Mydict_181_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Alumno",620,G__Mydict_181_0_2, 105, G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Rol i - 'Int_t' 0 - Nota", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_181_0_3, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Alumno::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_181_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_181_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Alumno::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_181_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Alumno::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_181_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_181_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_181_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Alumno::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_181_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_181_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Alumno::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Alumno", 620, G__Mydict_181_0_15, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 1, 1, 1, 0, "u 'Alumno' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Alumno", 746, G__Mydict_181_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_181_0_17, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 1, 1, 1, 1, 0, "u 'Alumno' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHorario(void) {
   /* Horario */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Horario));
   G__memfunc_setup("Horario",724,G__Mydict_182_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Horario), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FijarBloque",1108,G__Mydict_182_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_182_0_3, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Horario::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_182_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Horario::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_182_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Horario::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_182_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Horario::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Mydict_182_0_7, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Mydict_182_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Mydict_182_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_182_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_182_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Horario::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_182_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Horario::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_182_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Horario::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_182_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Horario::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Horario", 724, G__Mydict_182_0_15, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Horario), -1, 0, 1, 1, 1, 0, "u 'Horario' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Horario", 850, G__Mydict_182_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_182_0_17, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Horario), -1, 1, 1, 1, 1, 0, "u 'Horario' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCurso(void) {
   /* Curso */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Curso));
   G__memfunc_setup("Curso",524,G__Mydict_183_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Curso), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FormarCurso",1139,G__Mydict_183_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - NAlumnos i - 'Int_t' 0 - RolInicial "
"i - 'Int_t' 0 - NotaMedia", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddAlumno",885,G__Mydict_183_0_3, 85, G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - Rol i - 'Int_t' 0 - Nota", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_183_0_4, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Curso::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_183_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Curso::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_183_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Curso::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_183_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Curso::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_183_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_183_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Curso::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_183_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Curso::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_183_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Curso::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_183_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Curso::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Curso", 524, G__Mydict_183_0_16, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Curso), -1, 0, 1, 1, 1, 0, "u 'Curso' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Curso", 650, G__Mydict_183_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_183_0_18, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Curso), -1, 1, 1, 1, 1, 0, "u 'Curso' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMydict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMydict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMydict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MydictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MydictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MydictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MydictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MydictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MydictLN_Alumno = { "Alumno" , 99 , -1 };
G__linked_taginfo G__MydictLN_Horario = { "Horario" , 99 , -1 };
G__linked_taginfo G__MydictLN_Curso = { "Curso" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMydict() {
  G__MydictLN_TClass.tagnum = -1 ;
  G__MydictLN_TBuffer.tagnum = -1 ;
  G__MydictLN_TMemberInspector.tagnum = -1 ;
  G__MydictLN_TObject.tagnum = -1 ;
  G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MydictLN_TClonesArray.tagnum = -1 ;
  G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MydictLN_Alumno.tagnum = -1 ;
  G__MydictLN_Horario.tagnum = -1 ;
  G__MydictLN_Curso.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMydict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MydictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MydictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MydictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MydictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Alumno),sizeof(Alumno),-1,324864,"Clase análoga a Track",G__setup_memvarAlumno,G__setup_memfuncAlumno);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Horario),sizeof(Horario),-1,263424,"Clase análoga a EventHeader",G__setup_memvarHorario,G__setup_memfuncHorario);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Curso),sizeof(Curso),-1,292096,"Clase análoga a Event;",G__setup_memvarCurso,G__setup_memfuncCurso);
}
extern "C" void G__cpp_setupMydict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMydict()");
  G__set_cpp_environmentMydict();
  G__cpp_setup_tagtableMydict();

  G__cpp_setup_inheritanceMydict();

  G__cpp_setup_typetableMydict();

  G__cpp_setup_memvarMydict();

  G__cpp_setup_memfuncMydict();
  G__cpp_setup_globalMydict();
  G__cpp_setup_funcMydict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMydict();
  return;
}
class G__cpp_setup_initMydict {
  public:
    G__cpp_setup_initMydict() { G__add_setup_func("Mydict",(G__incsetup)(&G__cpp_setupMydict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMydict() { G__remove_setup_func("Mydict"); }
};
G__cpp_setup_initMydict G__cpp_setup_initializerMydict;

