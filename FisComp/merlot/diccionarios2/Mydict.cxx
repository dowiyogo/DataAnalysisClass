//
// File generated by rootcint at Sun Aug 14 20:04:21 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Mydict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Mydict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Alumno_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Alumno(void *p = 0);
   static void *newArray_Alumno(Long_t size, void *p);
   static void delete_Alumno(void *p);
   static void deleteArray_Alumno(void *p);
   static void destruct_Alumno(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Alumno*)
   {
      ::Alumno *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Alumno >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Alumno", ::Alumno::Class_Version(), "./Fila.h", 12,
                  typeid(::Alumno), DefineBehavior(ptr, ptr),
                  &::Alumno::Dictionary, isa_proxy, 4,
                  sizeof(::Alumno) );
      instance.SetNew(&new_Alumno);
      instance.SetNewArray(&newArray_Alumno);
      instance.SetDelete(&delete_Alumno);
      instance.SetDeleteArray(&deleteArray_Alumno);
      instance.SetDestructor(&destruct_Alumno);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Alumno*)
   {
      return GenerateInitInstanceLocal((::Alumno*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Alumno*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Contador_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Contador(void *p = 0);
   static void *newArray_Contador(Long_t size, void *p);
   static void delete_Contador(void *p);
   static void deleteArray_Contador(void *p);
   static void destruct_Contador(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Contador*)
   {
      ::Contador *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Contador >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Contador", ::Contador::Class_Version(), "./Fila.h", 29,
                  typeid(::Contador), DefineBehavior(ptr, ptr),
                  &::Contador::Dictionary, isa_proxy, 4,
                  sizeof(::Contador) );
      instance.SetNew(&new_Contador);
      instance.SetNewArray(&newArray_Contador);
      instance.SetDelete(&delete_Contador);
      instance.SetDeleteArray(&deleteArray_Contador);
      instance.SetDestructor(&destruct_Contador);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Contador*)
   {
      return GenerateInitInstanceLocal((::Contador*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Contador*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Fila_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Fila(void *p = 0);
   static void *newArray_Fila(Long_t size, void *p);
   static void delete_Fila(void *p);
   static void deleteArray_Fila(void *p);
   static void destruct_Fila(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Fila*)
   {
      ::Fila *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Fila >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Fila", ::Fila::Class_Version(), "./Fila.h", 44,
                  typeid(::Fila), DefineBehavior(ptr, ptr),
                  &::Fila::Dictionary, isa_proxy, 4,
                  sizeof(::Fila) );
      instance.SetNew(&new_Fila);
      instance.SetNewArray(&newArray_Fila);
      instance.SetDelete(&delete_Fila);
      instance.SetDeleteArray(&deleteArray_Fila);
      instance.SetDestructor(&destruct_Fila);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Fila*)
   {
      return GenerateInitInstanceLocal((::Fila*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Fila*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Alumno::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Alumno::Class_Name()
{
   return "Alumno";
}

//______________________________________________________________________________
const char *Alumno::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Alumno::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Alumno::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Alumno::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Alumno*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Contador::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Contador::Class_Name()
{
   return "Contador";
}

//______________________________________________________________________________
const char *Contador::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Contador*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Contador::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Contador*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Contador::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Contador*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Contador::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Contador*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Fila::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Fila::Class_Name()
{
   return "Fila";
}

//______________________________________________________________________________
const char *Fila::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Fila*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Fila::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Fila*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Fila::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Fila*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Fila::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Fila*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Contador::Streamer(TBuffer &R__b)
{
   // Stream an object of class Contador.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Contador::Class(),this);
   } else {
      R__b.WriteClassBuffer(Contador::Class(),this);
   }
}

//______________________________________________________________________________
void Contador::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Contador.
      TClass *R__cl = ::Contador::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fecha", &fecha);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Contador(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Contador : new ::Contador;
   }
   static void *newArray_Contador(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Contador[nElements] : new ::Contador[nElements];
   }
   // Wrapper around operator delete
   static void delete_Contador(void *p) {
      delete ((::Contador*)p);
   }
   static void deleteArray_Contador(void *p) {
      delete [] ((::Contador*)p);
   }
   static void destruct_Contador(void *p) {
      typedef ::Contador current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Contador

//______________________________________________________________________________
void Fila::Streamer(TBuffer &R__b)
{
   // Stream an object of class Fila.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Fila::Class(),this);
   } else {
      R__b.WriteClassBuffer(Fila::Class(),this);
   }
}

//______________________________________________________________________________
void Fila::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Fila.
      TClass *R__cl = ::Fila::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pAlumno", &pAlumno);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Fila(void *p) {
      return  p ? new(p) ::Fila : new ::Fila;
   }
   static void *newArray_Fila(Long_t nElements, void *p) {
      return p ? new(p) ::Fila[nElements] : new ::Fila[nElements];
   }
   // Wrapper around operator delete
   static void delete_Fila(void *p) {
      delete ((::Fila*)p);
   }
   static void deleteArray_Fila(void *p) {
      delete [] ((::Fila*)p);
   }
   static void destruct_Fila(void *p) {
      typedef ::Fila current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Fila

//______________________________________________________________________________
void Alumno::Streamer(TBuffer &R__b)
{
   // Stream an object of class Alumno.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Alumno::Class(),this);
   } else {
      R__b.WriteClassBuffer(Alumno::Class(),this);
   }
}

//______________________________________________________________________________
void Alumno::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Alumno.
      TClass *R__cl = ::Alumno::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edad", &edad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rut", &rut);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Alumno(void *p) {
      return  p ? new(p) ::Alumno : new ::Alumno;
   }
   static void *newArray_Alumno(Long_t nElements, void *p) {
      return p ? new(p) ::Alumno[nElements] : new ::Alumno[nElements];
   }
   // Wrapper around operator delete
   static void delete_Alumno(void *p) {
      delete ((::Alumno*)p);
   }
   static void deleteArray_Alumno(void *p) {
      delete [] ((::Alumno*)p);
   }
   static void destruct_Alumno(void *p) {
      typedef ::Alumno current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Alumno

/********************************************************
* Mydict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMydict();

extern "C" void G__set_cpp_environmentMydict() {
  G__cpp_reset_tagtableMydict();
}
#include <new>
extern "C" int G__cpp_dllrevMydict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Alumno */
static int G__Mydict_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alumno[n];
     } else {
       p = new((void*) gvp) Alumno[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alumno;
     } else {
       p = new((void*) gvp) Alumno;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Alumno((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Alumno((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Alumno*) G__getstructoffset())->ver();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Alumno::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Alumno::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Alumno::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Alumno*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Alumno::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Alumno::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Alumno::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Alumno* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Alumno(*(Alumno*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Alumno));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Alumno G__TAlumno;
static int G__Mydict_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Alumno*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Alumno*) (soff+(sizeof(Alumno)*i)))->~G__TAlumno();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Alumno*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Alumno*) (soff))->~G__TAlumno();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alumno* dest = (Alumno*) G__getstructoffset();
   *dest = *(Alumno*) libp->para[0].ref;
   const Alumno& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Contador */
static int G__Mydict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Contador* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Contador[n];
     } else {
       p = new((void*) gvp) Contador[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Contador;
     } else {
       p = new((void*) gvp) Contador;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Contador));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Contador*) G__getstructoffset())->setFila((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Contador::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Contador::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Contador::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Contador::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Contador*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Contador*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Contador*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Contador*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Contador::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Contador::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Contador::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Contador::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Contador* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Contador(*(Contador*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Contador));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Contador G__TContador;
static int G__Mydict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Contador*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Contador*) (soff+(sizeof(Contador)*i)))->~G__TContador();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Contador*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Contador*) (soff))->~G__TContador();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Contador* dest = (Contador*) G__getstructoffset();
   *dest = *(Contador*) libp->para[0].ref;
   const Contador& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Fila */
static int G__Mydict_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Fila* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Fila[n];
     } else {
       p = new((void*) gvp) Fila[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Fila;
     } else {
       p = new((void*) gvp) Fila;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Fila));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Fila*) G__getstructoffset())->buildFila());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Fila::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Fila::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Fila::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Fila::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Fila*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Fila::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Fila::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Fila::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Mydict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Fila::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Mydict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Fila* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Fila(*(Fila*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MydictLN_Fila));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Fila G__TFila;
static int G__Mydict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Fila*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Fila*) (soff+(sizeof(Fila)*i)))->~G__TFila();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Fila*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Fila*) (soff))->~G__TFila();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Mydict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Fila* dest = (Fila*) G__getstructoffset();
   *dest = *(Fila*) libp->para[0].ref;
   const Fila& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Alumno */

/* Contador */

/* Fila */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMydict {
 public:
  G__Sizep2memfuncMydict(): p(&G__Sizep2memfuncMydict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMydict::*p)();
};

size_t G__get_sizep2memfuncMydict()
{
  G__Sizep2memfuncMydict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMydict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MydictLN_Alumno))) {
     Alumno *G__Lderived;
     G__Lderived=(Alumno*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MydictLN_Alumno),G__get_linked_tagnum(&G__MydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MydictLN_Fila))) {
     Fila *G__Lderived;
     G__Lderived=(Fila*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MydictLN_Fila),G__get_linked_tagnum(&G__MydictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMydict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Alumno */
static void G__setup_memvarAlumno(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Alumno));
   { Alumno *p; p=(Alumno*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->edad)-(long)(p)),105,0,0,-1,-1,-1,1,"edad=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rut)-(long)(p)),105,0,0,-1,-1,-1,1,"rut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Contador */
static void G__setup_memvarContador(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Contador));
   { Contador *p; p=(Contador*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fecha)-(long)(p)),105,0,0,-1,-1,-1,1,"fecha=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Fila */
static void G__setup_memvarFila(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MydictLN_Fila));
   { Fila *p; p=(Fila*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MydictLN_Contador),-1,-1,1,"t=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pAlumno)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__MydictLN_TClonesArray),-1,-1,1,"pAlumno=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MydictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMydict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAlumno(void) {
   /* Alumno */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Alumno));
   G__memfunc_setup("Alumno",620,G__Mydict_180_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Alumno",620,G__Mydict_180_0_2, 105, G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 2, 1, 1, 0, 
"i - - 0 - edad i - - 0 - rut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ver",333,G__Mydict_180_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_180_0_4, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Alumno::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_180_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_180_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Alumno::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_180_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Alumno::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_180_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_180_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_180_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Alumno::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_180_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Alumno::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_180_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Alumno::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Alumno", 620, G__Mydict_180_0_16, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 0, 1, 1, 1, 0, "u 'Alumno' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Alumno", 746, G__Mydict_180_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_180_0_18, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Alumno), -1, 1, 1, 1, 1, 0, "u 'Alumno' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncContador(void) {
   /* Contador */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Contador));
   G__memfunc_setup("Contador",826,G__Mydict_181_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Contador), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFila",712,G__Mydict_181_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - fecha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_181_0_3, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Contador::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_181_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Contador::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_181_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Contador::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_181_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Contador::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__Mydict_181_0_7, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__Mydict_181_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__Mydict_181_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_181_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_181_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Contador::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_181_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Contador::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_181_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Contador::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_181_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Contador::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Contador", 826, G__Mydict_181_0_15, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Contador), -1, 0, 1, 1, 1, 0, "u 'Contador' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Contador", 952, G__Mydict_181_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_181_0_17, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Contador), -1, 1, 1, 1, 1, 0, "u 'Contador' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFila(void) {
   /* Fila */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MydictLN_Fila));
   G__memfunc_setup("Fila",380,G__Mydict_182_0_1, 105, G__get_linked_tagnum(&G__MydictLN_Fila), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildFila",908,G__Mydict_182_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Mydict_182_0_3, 85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Fila::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Mydict_182_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Fila::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Mydict_182_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Fila::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Mydict_182_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Fila::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MydictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Mydict_182_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Mydict_182_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Fila::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Mydict_182_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Fila::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Mydict_182_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Fila::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Mydict_182_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Fila::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Fila", 380, G__Mydict_182_0_15, (int) ('i'), G__get_linked_tagnum(&G__MydictLN_Fila), -1, 0, 1, 1, 1, 0, "u 'Fila' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Fila", 506, G__Mydict_182_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Mydict_182_0_17, (int) ('u'), G__get_linked_tagnum(&G__MydictLN_Fila), -1, 1, 1, 1, 1, 0, "u 'Fila' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMydict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMydict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMydict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MydictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MydictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MydictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MydictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MydictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MydictLN_Alumno = { "Alumno" , 99 , -1 };
G__linked_taginfo G__MydictLN_Contador = { "Contador" , 99 , -1 };
G__linked_taginfo G__MydictLN_Fila = { "Fila" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMydict() {
  G__MydictLN_TClass.tagnum = -1 ;
  G__MydictLN_TBuffer.tagnum = -1 ;
  G__MydictLN_TMemberInspector.tagnum = -1 ;
  G__MydictLN_TObject.tagnum = -1 ;
  G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MydictLN_TClonesArray.tagnum = -1 ;
  G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MydictLN_Alumno.tagnum = -1 ;
  G__MydictLN_Contador.tagnum = -1 ;
  G__MydictLN_Fila.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMydict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MydictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MydictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MydictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MydictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MydictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__MydictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MydictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Alumno),sizeof(Alumno),-1,324864,"A Alumno segment",G__setup_memvarAlumno,G__setup_memfuncAlumno);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Contador),sizeof(Contador),-1,263424,"Fila Header",G__setup_memvarContador,G__setup_memfuncContador);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MydictLN_Fila),sizeof(Fila),-1,292096,"Fila structure",G__setup_memvarFila,G__setup_memfuncFila);
}
extern "C" void G__cpp_setupMydict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMydict()");
  G__set_cpp_environmentMydict();
  G__cpp_setup_tagtableMydict();

  G__cpp_setup_inheritanceMydict();

  G__cpp_setup_typetableMydict();

  G__cpp_setup_memvarMydict();

  G__cpp_setup_memfuncMydict();
  G__cpp_setup_globalMydict();
  G__cpp_setup_funcMydict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMydict();
  return;
}
class G__cpp_setup_initMydict {
  public:
    G__cpp_setup_initMydict() { G__add_setup_func("Mydict",(G__incsetup)(&G__cpp_setupMydict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMydict() { G__remove_setup_func("Mydict"); }
};
G__cpp_setup_initMydict G__cpp_setup_initializerMydict;

